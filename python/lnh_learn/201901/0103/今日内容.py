# 模块
# 什么是模块
# 为什么要有模块
# 模块分为几种
# import
# import的时候发生了什么
# 在import时候命名空间的变化
# 重命名
# 一行导入多个模块

# from ... import ...
# from ... import ...时发生了什么
# 在import时命名空间的变换
# 重命名
# 一行导入多个
# from 模块  import *
# * 和__all__的相关性


# 模块相关的其他知识
# 1. 把模块当成一个脚本运行： 从本模块中反射本模块中的变量
# 2. 重新加载模块
# 3. pyc编译文件
# 4. 模块的循环引用   不允许





# 包
# 什么是包
# 集合了一组py文件  提供了一组复杂功能的

# 为什么要有包
# 当提供的功能比较复杂，一个py文件写不下的时候

# 包中都有什么？
# 至少拥有一个__init__.py


# 简单的导入  平时写作业的过程
# 直接导入模块
# import 包.包.模块
# 包.包.模块.变量
# from 包.包 import 模块
# 模块.变量

# 导入包   读框架源码的时候
# 如果希望导入包之后，模块能够正常的使用，那么需要自己去完成__init__.py文件的开发
# 包中模块的 绝对导入
# 包中模块的相对导入
# 使用了相对导入的模块只能被当做模块执行
# 不能被当做脚本执行
