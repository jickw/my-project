# hash 方法
# 底层数据结构基于hash值寻址的优化操作

# hash是一个算法
# 能够把一个要存在内存里的值通过一系列计算，保证不同值的hash结果是不一样的
# 对同一个值在多次执行python代码的时候hash值是不同的
# 但是对同一个值，在同一次执行python代码的时候hash值永远不变

# print(hash('abc'))
# print(hash('abc'))
# print(hash('abc'))
# print(hash('abc'))

# 字典的寻址
# {'key': 'value'}

# set集合
se = {1,2,3,4,5,'a','b','c'}
print(se)
# 值等于是最准确的判断值相等的方式，  ==   效率低下

# hash的结果找到一块内存地址，只要这块地址上没有数据，就说明没有重复的数据
# 如果这块地址上有一个数据存在了，才判断这个值和我要存储的值是否一样
# 如果一样，覆盖去重
# 如果不一样，二次寻址，
